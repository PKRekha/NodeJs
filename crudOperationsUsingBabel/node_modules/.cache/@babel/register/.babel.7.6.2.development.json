{
  "{\"sourceRoot\":\"C:\\\\Rekha\\\\Rekha_laptop_backup\\\\rekha\\\\Personal\\\\INdia_stuff\\\\NodeJs_Course\\\\NodeJs_Examples\\\\NodeJs\\\\crudOperationsUsingBabel\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Rekha\\\\Rekha_laptop_backup\\\\rekha\\\\Personal\\\\INdia_stuff\\\\NodeJs_Course\\\\NodeJs_Examples\\\\NodeJs\\\\crudOperationsUsingBabel\",\"filename\":\"C:\\\\Rekha\\\\Rekha_laptop_backup\\\\rekha\\\\Personal\\\\INdia_stuff\\\\NodeJs_Course\\\\NodeJs_Examples\\\\NodeJs\\\\crudOperationsUsingBabel\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Rekha\\\\Rekha_laptop_backup\\\\rekha\\\\Personal\\\\INdia_stuff\\\\NodeJs_Course\\\\NodeJs_Examples\\\\NodeJs\\\\crudOperationsUsingBabel\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel",
      "filename": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar port = process.env.port || 4000;\nvar MongoClient = _mongodb[\"default\"].MongoClient;\nvar mongourl = \"mongodb://127.0.0.1:27017/\";\nvar db;\nvar col_name = \"names\"; //the below two lines are used to fetch the data from body\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json()); //app.listen(port,err=>{console.log(`server is working on port${port}`)});\n\napp.get(\"/\", function (req, res) {\n  res.send(\"sucess\");\n});\nMongoClient.connect(mongourl, function (err, res) {\n  if (err) throw err;\n  db = res.db('node_practise');\n  app.listen(port, function (err) {\n    return console.log(\"this server is running on port: \".concat(port));\n  });\n});\napp.get(\"/user\", function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) {\n      res.status(401).send(\"no data found\");\n    } else {\n      res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n      res.setHeader(\"Access-Control-Allow_headers\", \"Origin,X-Request-with,Content-type,Accept\");\n      res.status(200).send(result);\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk1vbmdvQ2xpZW50IiwibW9uZ28iLCJtb25nb3VybCIsImRiIiwiY29sX25hbWUiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJjb25uZWN0IiwiZXJyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImNvbGxlY3Rpb24iLCJmaW5kIiwidG9BcnJheSIsInJlc3VsdCIsInN0YXR1cyIsInNldEhlYWRlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUNBLElBQUlBLEdBQUcsR0FBRywwQkFBVjtBQUNBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakM7QUFDQSxJQUFJRyxXQUFXLEdBQUdDLG9CQUFNRCxXQUF4QjtBQUNBLElBQUlFLFFBQVEsR0FBRyw0QkFBZjtBQUNBLElBQUlDLEVBQUo7QUFDQSxJQUFJQyxRQUFRLEdBQUcsT0FBZixDLENBR0E7O0FBQ0FSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUFDQyxFQUFBQSxRQUFRLEVBQUM7QUFBVixDQUF0QixDQUFSO0FBQ0FaLEdBQUcsQ0FBQ1MsR0FBSixDQUFRQyx1QkFBV0csSUFBWCxFQUFSLEUsQ0FFQTs7QUFFQWIsR0FBRyxDQUFDYyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxRQUFUO0FBQ0QsQ0FGRDtBQUlBYixXQUFXLENBQUNjLE9BQVosQ0FBb0JaLFFBQXBCLEVBQThCLFVBQUNhLEdBQUQsRUFBTUgsR0FBTixFQUFjO0FBQzFDLE1BQUlHLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RaLEVBQUFBLEVBQUUsR0FBR1MsR0FBRyxDQUFDVCxFQUFKLENBQU8sZUFBUCxDQUFMO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ29CLE1BQUosQ0FBV25CLElBQVgsRUFBaUIsVUFBQWtCLEdBQUc7QUFBQSxXQUFFRSxPQUFPLENBQUNDLEdBQVIsMkNBQStDckIsSUFBL0MsRUFBRjtBQUFBLEdBQXBCO0FBQ0MsQ0FKSDtBQU1FRCxHQUFHLENBQUNjLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCVCxFQUFBQSxFQUFFLENBQUNnQixVQUFILENBQWNmLFFBQWQsRUFDR2dCLElBREgsR0FFR0MsT0FGSCxDQUVXLFVBQUNOLEdBQUQsRUFBTU8sTUFBTixFQUFpQjtBQUN4QixRQUFJUCxHQUFKLEVBQVM7QUFDUEgsTUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQlYsSUFBaEIsQ0FBcUIsZUFBckI7QUFDRCxLQUZELE1BRU87QUFDTEQsTUFBQUEsR0FBRyxDQUFDWSxTQUFKLENBQWMsNkJBQWQsRUFBNkMsR0FBN0M7QUFDQVosTUFBQUEsR0FBRyxDQUFDWSxTQUFKLENBQ0UsOEJBREYsRUFFRSwyQ0FGRjtBQUlBWixNQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCVixJQUFoQixDQUFxQlMsTUFBckI7QUFDRDtBQUNGLEdBYkg7QUFjRCxDQWZEIiwic291cmNlUm9vdCI6IkM6XFxSZWtoYVxcUmVraGFfbGFwdG9wX2JhY2t1cFxccmVraGFcXFBlcnNvbmFsXFxJTmRpYV9zdHVmZlxcTm9kZUpzX0NvdXJzZVxcTm9kZUpzX0V4YW1wbGVzXFxOb2RlSnNcXGNydWRPcGVyYXRpb25zVXNpbmdCYWJlbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzICBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgbW9uZ28gZnJvbSBcIm1vbmdvZGJcIjtcclxuaW1wb3J0ICBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xyXG5sZXQgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYucG9ydCB8fCA0MDAwO1xyXG5sZXQgTW9uZ29DbGllbnQgPSBtb25nby5Nb25nb0NsaWVudDtcclxubGV0IG1vbmdvdXJsID0gXCJtb25nb2RiOi8vMTI3LjAuMC4xOjI3MDE3L1wiO1xyXG5sZXQgZGI7XHJcbmxldCBjb2xfbmFtZSA9IFwibmFtZXNcIjtcclxuXHJcblxyXG4vL3RoZSBiZWxvdyB0d28gbGluZXMgYXJlIHVzZWQgdG8gZmV0Y2ggdGhlIGRhdGEgZnJvbSBib2R5XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDp0cnVlfSkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbi8vYXBwLmxpc3Rlbihwb3J0LGVycj0+e2NvbnNvbGUubG9nKGBzZXJ2ZXIgaXMgd29ya2luZyBvbiBwb3J0JHtwb3J0fWApfSk7XHJcblxyXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcclxuICByZXMuc2VuZChcInN1Y2Vzc1wiKTtcclxufSk7XHJcblxyXG5Nb25nb0NsaWVudC5jb25uZWN0KG1vbmdvdXJsLCAoZXJyLCByZXMpID0+IHtcclxuICBpZiAoZXJyKSB0aHJvdyBlcnI7XHJcbiAgZGIgPSByZXMuZGIoJ25vZGVfcHJhY3Rpc2UnKTtcclxuICBhcHAubGlzdGVuKHBvcnQsIGVycj0+Y29uc29sZS5sb2coYHRoaXMgc2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydDogJHtwb3J0fWApKTtcclxuICB9KTtcclxuXHJcbiAgYXBwLmdldChcIi91c2VyXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcclxuICAgICAgLmZpbmQoKVxyXG4gICAgICAudG9BcnJheSgoZXJyLCByZXN1bHQpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDQwMSkuc2VuZChcIm5vIGRhdGEgZm91bmRcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5zZXRIZWFkZXIoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgXCIqXCIpO1xyXG4gICAgICAgICAgcmVzLnNldEhlYWRlcihcclxuICAgICAgICAgICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvd19oZWFkZXJzXCIsXHJcbiAgICAgICAgICAgIFwiT3JpZ2luLFgtUmVxdWVzdC13aXRoLENvbnRlbnQtdHlwZSxBY2NlcHRcIlxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlc3VsdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9KTtcclxuXHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "port",
        "process",
        "env",
        "MongoClient",
        "mongo",
        "mongourl",
        "db",
        "col_name",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "send",
        "connect",
        "err",
        "listen",
        "console",
        "log",
        "collection",
        "find",
        "toArray",
        "result",
        "status",
        "setHeader"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAIA,GAAG,GAAG,0BAAV;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAIG,WAAW,GAAGC,oBAAMD,WAAxB;AACA,IAAIE,QAAQ,GAAG,4BAAf;AACA,IAAIC,EAAJ;AACA,IAAIC,QAAQ,GAAG,OAAf,C,CAGA;;AACAR,GAAG,CAACS,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAZ,GAAG,CAACS,GAAJ,CAAQC,uBAAWG,IAAX,EAAR,E,CAEA;;AAEAb,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,QAAT;AACD,CAFD;AAIAb,WAAW,CAACc,OAAZ,CAAoBZ,QAApB,EAA8B,UAACa,GAAD,EAAMH,GAAN,EAAc;AAC1C,MAAIG,GAAJ,EAAS,MAAMA,GAAN;AACTZ,EAAAA,EAAE,GAAGS,GAAG,CAACT,EAAJ,CAAO,eAAP,CAAL;AACAP,EAAAA,GAAG,CAACoB,MAAJ,CAAWnB,IAAX,EAAiB,UAAAkB,GAAG;AAAA,WAAEE,OAAO,CAACC,GAAR,2CAA+CrB,IAA/C,EAAF;AAAA,GAApB;AACC,CAJH;AAMED,GAAG,CAACc,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BT,EAAAA,EAAE,CAACgB,UAAH,CAAcf,QAAd,EACGgB,IADH,GAEGC,OAFH,CAEW,UAACN,GAAD,EAAMO,MAAN,EAAiB;AACxB,QAAIP,GAAJ,EAAS;AACPH,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB,eAArB;AACD,KAFD,MAEO;AACLD,MAAAA,GAAG,CAACY,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAZ,MAAAA,GAAG,CAACY,SAAJ,CACE,8BADF,EAEE,2CAFF;AAIAZ,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqBS,MAArB;AACD;AACF,GAbH;AAcD,CAfD",
      "sourceRoot": "C:\\Rekha\\Rekha_laptop_backup\\rekha\\Personal\\INdia_stuff\\NodeJs_Course\\NodeJs_Examples\\NodeJs\\crudOperationsUsingBabel",
      "sourcesContent": [
        "import express  from \"express\";\r\nimport mongo from \"mongodb\";\r\nimport  bodyParser from \"body-parser\";\r\nlet app = express();\r\nconst port = process.env.port || 4000;\r\nlet MongoClient = mongo.MongoClient;\r\nlet mongourl = \"mongodb://127.0.0.1:27017/\";\r\nlet db;\r\nlet col_name = \"names\";\r\n\r\n\r\n//the below two lines are used to fetch the data from body\r\napp.use(bodyParser.urlencoded({extended:true}));\r\napp.use(bodyParser.json());\r\n\r\n//app.listen(port,err=>{console.log(`server is working on port${port}`)});\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.send(\"sucess\");\r\n});\r\n\r\nMongoClient.connect(mongourl, (err, res) => {\r\n  if (err) throw err;\r\n  db = res.db('node_practise');\r\n  app.listen(port, err=>console.log(`this server is running on port: ${port}`));\r\n  });\r\n\r\n  app.get(\"/user\", (req, res) => {\r\n    db.collection(col_name)\r\n      .find()\r\n      .toArray((err, result) => {\r\n        if (err) {\r\n          res.status(401).send(\"no data found\");\r\n        } else {\r\n          res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n          res.setHeader(\r\n            \"Access-Control-Allow_headers\",\r\n            \"Origin,X-Request-with,Content-type,Accept\"\r\n          );\r\n          res.status(200).send(result);\r\n        }\r\n      });\r\n  });\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569365172145
  }
}